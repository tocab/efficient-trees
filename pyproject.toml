[tool.poetry]
name = "efficient-trees"
version = "0.1.0"
description = "A memory-efficient implementation of decision trees."
authors = ["Tobias Cabanski <t.cabanski@posteo.de>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "efficient_trees" }]

[tool.poetry.dependencies]
python = "^3.12"
polars = "*"

[tool.poetry.group.dev.dependencies]
numpy = "*"
scikit-learn = "*"
lightgbm = "*"
memory-profiler = "*"
matplotlib = "*"
kagglehub = "*"
pytest = "*"
pytest-cov = "*"
flake8 = "7.1.1"
black = "24.10.0"
pre-commit = "*"
isort = "*"
pandas = "*"
pyarrow = "*"
cffi = "*"
coverage-badge = "*"

[tool.ruff]
line-length = 120
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"] # if you want to play it safe, remove "ALL" from here and do the manual fixes always/temporarily or select rules, that should be automatically fixed
unfixable = ["B", "E712"] # specify list of groups and rules, that you don't want to be fixed
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "UP",  # pyupgrade
  "D",   # pydocstyle
  "B",   # flake8-bugbear rules.
]
# add things like "E712" (== True in pandas code) below
extend-ignore = ["B904", "D105", "D107", "D200", "D203", "D212", "D214", "D215", "D401", "D404", "D405", "D406", "D407", "D408", "D409", "D410", "D411", "D413", "D415", "D416", "D417", "E203", "E999"]

[tool.ruff.pydocstyle]
convention = "pep257"
[tool.ruff.extend-per-file-ignores]
"__init__.py" = ["D104"]

[tool.ruff.isort]
known-first-party = ["efficient_trees", "tests"]
order-by-type = false

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
