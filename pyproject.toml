[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "efficient-trees"
version = "0.1.0"
description = "A memory-efficient implementation of decision trees."
authors = [{ name = "Tobias Cabanski", email = "t.cabanski@posteo.de" }]
requires-python = ">=3.12"
readme = "README.md"
license = "MIT"
dependencies = ["polars"]

[dependency-groups]
dev = [
    "numpy",
    "scikit-learn",
    "lightgbm",
    "memory-profiler",
    "matplotlib",
    "kagglehub",
    "pytest",
    "pytest-cov",
    "flake8==7.1.1",
    "black==24.10.0",
    "pre-commit",
    "isort",
    "pandas",
    "pyarrow",
    "cffi",
    "coverage-badge",
]

[tool.ruff]
line-length = 120
# Allow autofix for all enabled rules (when `--fix`) is provided.
exclude = [
  "examples/memory_profiling.py",
  "tests",
]

[tool.ruff.lint]
# add things like "E712" (== True in pandas code) below
extend-ignore = ["B904", "D105", "D107", "D200", "D203", "D212", "D214", "D215", "D401", "D404", "D405", "D406", "D407", "D408", "D409", "D410", "D411", "D413", "D415", "D416", "D417", "E203"]
fixable = ["ALL"] # if you want to play it safe, remove "ALL" from here and do the manual fixes always/temporarily or select rules, that should be automatically fixed
unfixable = ["B", "E712"] # specify list of groups and rules, that you don't want to be fixed
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "UP",  # pyupgrade
  "D",   # pydocstyle
  "B",   # flake8-bugbear rules.
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["D104"]

[tool.ruff.lint.isort]
known-first-party = ["efficient_trees", "tests"]
order-by-type = false

[tool.hatch.build]
exclude = [
  "/.*",
  "/docs",
  "/tests",
  "/data",
  "/notebooks",
  ".gitignore",
  "README.md",
  "uv.lock",
  ".python-version",
]

[tool.pyright]
venvPath = "."
venv = ".venv"
